plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'maven-publish'
    id 'signing'
    id 'org.graalvm.buildtools.native' version '0.9.21'
}

apply plugin: "jacoco"
jacoco {
    toolVersion = "0.8.7"
}

application {
    mainClass.set("application.SpecmaticApplication")
}

jar {
    from '../version.properties'
}

shadowJar {
    archiveFileName = "specmatic.${archiveExtension.get()}"
    from '../version.properties'
}

repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    maven { url = uri("https://repo.spring.io/release") }
}

def ktor_version = "2.1.3"
def junit_version = "5.9.1"
def jgit_version = "5.13.0.202109080827-r"

dependencies {
    implementation 'com.arakelian:java-jq:1.3.0'
    testImplementation 'com.arakelian:java-jq:1.3.0'

    implementation 'org.assertj:assertj-core:3.23.1'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'

    implementation('info.picocli:picocli-spring-boot-starter:4.7.0') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    implementation 'info.picocli:picocli:4.7.0'
    implementation "io.ktor:ktor-client-core-jvm:${ktor_version}"
    implementation "io.ktor:ktor-network-tls:$ktor_version"
    implementation "io.ktor:ktor-network-tls-certificates:$ktor_version"

    implementation 'org.junit.platform:junit-platform-launcher:1.9.1'
    implementation 'org.junit.platform:junit-platform-reporting:1.9.1'

    implementation "org.eclipse.jgit:org.eclipse.jgit:$jgit_version"
    implementation "org.eclipse.jgit:org.eclipse.jgit.ssh.apache:$jgit_version"

//    implementation 'org.slf4j:slf4j-nop:2.0.3'
    runtimeOnly "ch.qos.logback:logback-classic:1.4.6"
    implementation 'org.apache.kafka:kafka-clients:3.3.1'

    implementation 'org.apache.ant:ant-junit:1.10.12'

    implementation(project(':core'))
    implementation(project(':junit5-support'))

// https://mvnrepository.com/artifact/org.fusesource.jansi/jansi
    implementation 'org.fusesource.jansi:jansi:2.4.0'

    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation 'io.swagger.parser.v3:swagger-parser:2.1.9'

    implementation 'org.springframework.experimental:spring-native:0.12.0'

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"

    testImplementation('org.springframework.boot:spring-boot-starter-test:2.7.5') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude module: 'mockito-core'
    }
    testImplementation 'io.mockk:mockk:1.13.2'
    testImplementation('com.ninja-squad:springmockk:3.1.1') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'com.ginsberg:junit5-system-exit:1.1.2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = false
        csv.required = false
    }
}

group = 'in.specmatic'

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

graalvmNative {
//    binaries.all {
//        resources.autodetect()
//    }
    toolchainDetection = false
    binaries {
        main {
            imageName = 'specmatic'
            mainClass = 'application.SpecmaticApplication'
            useFatJar = true
            buildArgs.add('--initialize-at-build-time=org.apache.logging.slf4j.SLF4JLogger,org.apache.logging.slf4j.SLF4JLoggerContextFactory,org.slf4j.impl.StaticLoggerBinder,org.slf4j.LoggerFactory,ch.qos.logback.classic.Logger,ch.qos.logback.core.spi.AppenderAttachableImpl,ch.qos.logback.core.status.StatusBase,ch.qos.logback.classic.Level,ch.qos.logback.core.status.InfoStatus,ch.qos.logback.classic.PatternLayout,ch.qos.logback.core.CoreConstants,io.netty.util.internal.logging.Log4J2Logger,org.apache.logging.log4j.spi.StandardLevel,org.apache.logging.log4j.Level,org.apache.logging.log4j.spi.Provider,org.apache.logging.log4j.spi.LoggerRegistry,org.apache.logging.log4j.util.PropertiesUtil,org.apache.logging.log4j.util.LoaderUtil,org.apache.logging.log4j.util.PropertySource$Util,org.apache.logging.log4j.util.Constants,org.apache.logging.log4j.LogManager,org.apache.logging.log4j.message.ReusableMessageFactory,org.apache.logging.log4j.status.StatusLogger,org.apache.logging.log4j.util.Strings,org.apache.logging.log4j.util.ProviderUtil,org.springframework.util.ClassUtils,org.springframework.util.ConcurrentReferenceHashMap,org.slf4j.MDC,ch.qos.logback.core.util.StatusPrinter,ch.qos.logback.core.util.Loader')
//            buildArgs.add('--trace-class-initialization=org.apache.logging.slf4j.SLF4JLogger')
        }
    }
}

tasks.named("nativeCompile") {
    classpathJar = file("build/libs/specmatic.jar")
}